<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:AudioBand.Resources"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:theme="clr-namespace:AudioBand.Resources.Theming">
    <ResourceDictionary.MergedDictionaries>
        <local:SharedDictionary Source="Shared.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <Style TargetType="ComboBoxItem" BasedOn="{StaticResource {x:Type ComboBoxItem}}">
        <Style.Resources>
            <system:Double x:Key="ComboBoxItemHeight">30</system:Double>
        </Style.Resources>
        <Setter Property="Height" Value="{StaticResource ComboBoxItemHeight}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="ComboBoxItem" SnapsToDevicePixels="True" Background="{TemplateBinding Background}" Padding="4, 0">
                        <ContentPresenter VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{theme:ThemeResource SystemAccentColorLow}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{theme:ThemeResource SystemListMediumColor}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True"/>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{theme:ThemeResource SystemAccentColorHigh}"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ComboboxToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="{TemplateBinding Background}">
                        <TextBlock Foreground="{theme:ThemeResource SystemBaseMediumColor}"
                                   HorizontalAlignment="Right" VerticalAlignment="Center"
                                   Margin="8, 0"
                                   TextAlignment="Center" FontFamily="Segoe MDL2 Assets" Text="&#xE70D;" FontSize="16"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="{StaticResource BorderThickness}"/>
        <Setter Property="BorderBrush" Value="{theme:ThemeResource SystemBaseLowColor}"/>
        <Setter Property="FontSize" Value="{StaticResource BodyFontSize}"/>
        <Setter Property="Background" Value="{theme:ThemeResource SystemAltHighColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="{Binding ElementName=Border, Path=ActualHeight}"/>
                            </Grid.ColumnDefinitions>
                            <ToggleButton x:Name="ToggleButton" Grid.Column="0" Grid.ColumnSpan="2"
                                          Focusable="false" ClickMode="Press" BorderThickness="0"
                                          IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                          VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                          Background="{TemplateBinding Background}"
                                          Style="{StaticResource ComboboxToggleButtonStyle}"/>
                            <ContentPresenter Name="ContentSite" Grid.Column="0" IsHitTestVisible="False"
                                              Margin="{StaticResource InputSpacing}"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              VerticalAlignment="Center" HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox" Grid.Column="0" Style="{x:Null}"
                                     BorderThickness="0" Padding="{StaticResource InputSpacing}"
                                     HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                     VerticalContentAlignment="Center" Foreground="{TemplateBinding Foreground}"
                                     Focusable="True" Background="Transparent"
                                     Visibility="Hidden"
                                     IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup x:Name="PART_Popup" Grid.Column="0" Placement="Bottom" AllowsTransparency="True"
                                   IsOpen="{TemplateBinding IsDropDownOpen}" PlacementTarget="{Binding ElementName=Border}"
                                   Focusable="False" PopupAnimation="Fade">
                                <Border BorderThickness="1" Margin="8"
                                        BorderBrush="{theme:ThemeResource SystemChromeHighColor}"
                                        MinWidth="{TemplateBinding ActualWidth}"
                                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                        Background="{theme:ThemeResource SystemChromeMediumColor}">
                                    <Border.Effect>
                                        <DropShadowEffect BlurRadius="10" Opacity="0.4" ShadowDepth="0"/>
                                    </Border.Effect>
                                    <ScrollViewer Margin="0, 4" VerticalScrollBarVisibility="Auto">
                                        <VirtualizingStackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{theme:ThemeResource SystemAccentColor}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{theme:ThemeResource SystemAccentColor}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{theme:ThemeResource SystemBaseMediumColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="FontFamilyComboBoxItemDataTemplate">
        <TextBlock>
            <Run Text="{Binding Path=.}"/>
            <Run Text="  "/>
            <Run Text="{Binding Path=.}" FontFamily="{Binding Path=.}"/>
        </TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="EnumDescriptorItemTemplate">
        <TextBlock Text="{Binding Description}"/>
    </DataTemplate>
</ResourceDictionary>