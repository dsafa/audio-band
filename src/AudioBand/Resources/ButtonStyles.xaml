<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:AudioBand.Resources"
                    xmlns:fluentWpf="clr-namespace:SourceChord.FluentWPF;assembly=FluentWPF"
                    xmlns:animations="clr-namespace:SourceChord.FluentWPF.Animations;assembly=FluentWPF"
                    xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls">
    <ResourceDictionary.MergedDictionaries>
        <local:SharedDictionary Source="pack://application:,,,/FluentWPF;component/Styles/Controls.xaml"/>
        <local:SharedDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.ToggleSwitch.xaml" />
        <local:SharedDictionary Source="Shared.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FontSize" Value="{StaticResource BodyFontSize}"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Background" Value="{StaticResource BorderDefaultColorBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderDefaultColorBrush}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Height" Value="{StaticResource DefaultButtonHeight}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            RenderTransformOrigin="0.5, 0.5">
                        <Border.RenderTransform>
                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                        </Border.RenderTransform>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="4" TextBlock.Foreground="{TemplateBinding Foreground}"/>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.01" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)"
                                                        To="{StaticResource BorderHoverColor}" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)"
                                                        To="{StaticResource BorderHoverColor}" Duration="0:0:0.01"/>
                                        <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
                                                        To="{StaticResource BorderHoverColor}" Duration="0:0:0.01"/>
                                        <DoubleAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                                         To="0.98" Duration="0:0:0.01"/>
                                        <DoubleAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                                         To="0.98" Duration="0:0:0.01"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)"
                                                        To="{StaticResource BorderHoverColor}" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsDefault" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource BorderFocusedColorBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource ButtonDisabledColorBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RevealButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonRevealStyle}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="Root" Background="{TemplateBinding Background}" RenderTransformOrigin="0.5, 0.5">
                        <Grid.RenderTransform>
                            <ScaleTransform/>
                        </Grid.RenderTransform>
                        <Rectangle x:Name="RevealHoverLightLayer" Opacity="0"
                                   HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                   Fill="{StaticResource RevealHoverLightBrush}"/>
                        <Border x:Name="Border" BorderBrush="{fluentWpf:RevealBrush Color={StaticResource ButtonRevealColor}, Size=70}"
                                BorderThickness="1" Background="Transparent">
                            <ContentPresenter x:Name="Content" Focusable="False"
                                              HorizontalAlignment="Center" VerticalAlignment="Center"
                                              Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="RevealHoverLightLayer" Storyboard.TargetProperty="Opacity"
                                                         From="0" To="1" Duration="0:0:0.1">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.(SolidColorBrush.Color)">
                                            <DiscreteColorKeyFrame Value="#88FFFFFF" KeyTime="0"/>
                                            <DiscreteColorKeyFrame Value="#88FFFFFF" KeyTime="0"/>
                                            <EasingColorKeyFrame Value="#22FFFFFF" KeyTime="0:0:0.2"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                                         To="0.98" Duration="0:0:0.01"/>
                                        <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                                         To="0.98" Duration="0:0:0.01"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame Value="{x:Null}" KeyTime="0"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource ButtonDisabledColorBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ContainerButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Margin" Value="-6, 0, 0, 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" Background="{TemplateBinding Background}" Padding="6" RenderTransformOrigin="0.5,0.5"
                            BorderBrush="{fluentWpf:RevealBrush Color={StaticResource ButtonRevealColor}, Size=50}"
                            BorderThickness="1">
                        <Border.RenderTransform>
                            <ScaleTransform/>
                        </Border.RenderTransform>
                        <ContentPresenter/>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.01" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
                                                        To="#22888888" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
                                                        To="#44888888" Duration="0:0:0.01"/>
                                        <DoubleAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                                         To="0.98" Duration="0:0:0.01"/>
                                        <DoubleAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                                         To="0.98" Duration="0:0:0.01"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type metro:ToggleSwitch}" BasedOn="{StaticResource MahApps.Metro.Styles.ToggleSwitch.Win10}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="{StaticResource BodyFontSize}"/>
    </Style>

    <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
        <Setter Property="BorderThickness" Value="{DynamicResource BorderThickness}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderDefaultColorBrush}"/>
        <Setter Property="metro:ControlsHelper.MouseOverBorderBrush" Value="{StaticResource BorderHoverColorBrush}"/>
        <Setter Property="metro:ControlsHelper.FocusBorderBrush" Value="{StaticResource BorderFocusedColorBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{x:Static fluentWpf:AccentColors.ImmersiveSystemAccentBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>