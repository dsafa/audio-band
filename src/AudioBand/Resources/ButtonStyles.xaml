<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:AudioBand.ValueConverters"
                    xmlns:fluentWpf="clr-namespace:SourceChord.FluentWPF;assembly=FluentWPF"
                    xmlns:local="clr-namespace:AudioBand.Resources"
                    xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:theme="clr-namespace:AudioBand.Resources.Theming">
    <ResourceDictionary.MergedDictionaries>
        <local:SharedDictionary Source="pack://application:,,,/FluentWPF;component/Styles/Controls.xaml" />
        <local:SharedDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.ToggleSwitch.xaml" />
        <local:SharedDictionary Source="Shared.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FontSize" Value="{StaticResource BodyFontSize}" />
        <Setter Property="Foreground" Value="{theme:ThemeResource SystemBaseHighColor}" />
        <Setter Property="Background" Value="{theme:ThemeResource SystemBaseLowColor}" />
        <Setter Property="BorderBrush" Value="{theme:ThemeResource SystemBaseLowColor}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Height" Value="{StaticResource DefaultButtonHeight}" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            RenderTransformOrigin="0.5, 0.5">
                        <Border.RenderTransform>
                            <ScaleTransform ScaleX="1" ScaleY="1" />
                        </Border.RenderTransform>
                        <ContentPresenter Margin="4"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          TextBlock.Foreground="{TemplateBinding Foreground}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.01" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Border"
                                                         Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                                         To="0.98"
                                                         Duration="0:0:0.01" />
                                        <DoubleAnimation Storyboard.TargetName="Border"
                                                         Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                                         To="0.98"
                                                         Duration="0:0:0.01" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsDefault" Value="True">
                <Setter Property="BorderBrush" Value="{theme:ThemeResource SystemBaseMediumColor}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{theme:ThemeResource SystemBaseMediumLowColor}" />
                <Setter Property="Background" Value="{theme:ThemeResource SystemBaseLowColor}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{theme:ThemeResource SystemBaseMediumColor}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{theme:ThemeResource SystemBaseMediumColor}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{theme:ThemeResource SystemBaseMediumColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RevealButton"
           BasedOn="{StaticResource ButtonRevealStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{theme:ThemeResource SystemBaseHighColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="Root"
                          Background="{TemplateBinding Background}"
                          RenderTransformOrigin="0.5, 0.5">
                        <Grid.RenderTransform>
                            <ScaleTransform />
                        </Grid.RenderTransform>
                        <Rectangle x:Name="RevealHoverLightLayer"
                                   HorizontalAlignment="Stretch"
                                   VerticalAlignment="Stretch"
                                   Fill="{StaticResource RevealHoverLightBrush}"
                                   Opacity="0" />
                        <Border x:Name="Border"
                                Background="Transparent"
                                BorderBrush="{StaticResource RevealBorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter x:Name="Content"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Focusable="False" />
                        </Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="RevealHoverLightLayer"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="0"
                                                         To="1"
                                                         Duration="0:0:0.1">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.(SolidColorBrush.Color)">
                                            <DiscreteColorKeyFrame KeyTime="0" Value="#88FFFFFF" />
                                            <DiscreteColorKeyFrame KeyTime="0" Value="#88FFFFFF" />
                                            <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#22FFFFFF" />
                                        </ColorAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="Root"
                                                         Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                                         To="0.98"
                                                         Duration="0:0:0.01" />
                                        <DoubleAnimation Storyboard.TargetName="Root"
                                                         Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                                         To="0.98"
                                                         Duration="0:0:0.01" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Null}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{theme:ThemeResource SystemBaseMediumLowColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ContainerButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{theme:ThemeResource SystemBaseHighColor}" />
        <Setter Property="Margin" Value="-6,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                            Padding="6"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{StaticResource RevealBorderBrush}"
                            BorderThickness="1"
                            RenderTransformOrigin="0.5,0.5">
                        <Border.RenderTransform>
                            <ScaleTransform />
                        </Border.RenderTransform>
                        <ContentPresenter />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.01" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Border"
                                                         Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                                         To="0.98"
                                                         Duration="0:0:0.01" />
                                        <DoubleAnimation Storyboard.TargetName="Border"
                                                         Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                                         To="0.98"
                                                         Duration="0:0:0.01" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{theme:ThemeResource SystemChromeMediumColor}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{theme:ThemeResource SystemChromeHighColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="Win10ToggleSwitch"
           BasedOn="{StaticResource MahApps.Metro.Styles.ToggleSwitchButton}"
           TargetType="{x:Type metro:ToggleSwitchButton}">
        <Setter Property="Height" Value="20" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="ThumbIndicatorWidth" Value="10" />
        <Setter Property="Width" Value="44" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type metro:ToggleSwitchButton}">
                    <Grid>
                        <Grid x:Name="PART_SwitchTrack">
                            <Border x:Name="PART_SwitchBrushBorder"
                                    Width="{TemplateBinding Width}"
                                    Height="{TemplateBinding Height}"
                                    Background="{theme:ThemeResource SystemAccentColor}"
                                    CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Height, Converter={x:Static converters:Converters.DoubleToCornerRadius}, Mode=OneWay}"
                                    Opacity="0" />
                            <Border x:Name="PART_SwitchBrushOuterBorder"
                                    Width="{TemplateBinding Width}"
                                    Height="{TemplateBinding Height}"
                                    BorderBrush="{theme:ThemeResource SystemBaseHighColor}"
                                    BorderThickness="2"
                                    CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Height, Converter={x:Static converters:Converters.DoubleToCornerRadius}, Mode=OneWay}"
                                    Opacity="1" />
                            <Border x:Name="PART_ThumbIndicator"
                                    Width="{TemplateBinding Height}"
                                    Height="{TemplateBinding Height}"
                                    HorizontalAlignment="Left">
                                <FrameworkElement.RenderTransform>
                                    <TranslateTransform x:Name="PART_ThumbTranslate" />
                                </FrameworkElement.RenderTransform>
                                <Ellipse x:Name="PART_ThumbIndicatorInner"
                                         Width="{TemplateBinding ThumbIndicatorWidth}"
                                         Height="{TemplateBinding ThumbIndicatorWidth}"
                                         Fill="{theme:ThemeResource SystemBaseHighColor}" />
                            </Border>
                        </Grid>
                        <Thumb x:Name="PART_DraggingThumb">
                            <Thumb.Template>
                                <ControlTemplate>
                                    <Rectangle Fill="Transparent" />
                                </ControlTemplate>
                            </Thumb.Template>
                        </Thumb>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--  Checked  -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="PART_SwitchBrushBorder" Property="Opacity" Value="1" />
                            <Setter TargetName="PART_SwitchBrushOuterBorder" Property="Opacity" Value="0" />
                            <Setter TargetName="PART_ThumbIndicatorInner" Property="Fill" Value="White" />
                        </Trigger>
                        <!--  MouseOver  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_SwitchBrushOuterBorder" Property="BorderBrush" Value="{theme:ThemeResource SystemBaseMediumColor}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_SwitchBrushBorder" Property="Background" Value="{theme:ThemeResource SystemAccentColorMedium}" />
                        </MultiTrigger>
                        <!--  Pressed  -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_SwitchBrushBorder" Property="Background" Value="{theme:ThemeResource SystemChromeHighColor}" />
                            <Setter TargetName="PART_SwitchBrushBorder" Property="Opacity" Value="1" />
                            <Setter TargetName="PART_SwitchBrushOuterBorder" Property="Opacity" Value="0" />
                            <Setter TargetName="PART_ThumbIndicatorInner" Property="Fill" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource MahApps.Metro.Styles.ToggleSwitch.Win10}" TargetType="{x:Type metro:ToggleSwitch}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontSize" Value="{StaticResource BodyFontSize}" />
        <Setter Property="ContentDirection" Value="RightToLeft" />
        <Setter Property="ToggleSwitchButtonStyle" Value="{StaticResource Win10ToggleSwitch}" />
    </Style>

    <Style BasedOn="{StaticResource {x:Type CheckBox}}" TargetType="{x:Type CheckBox}">
        <Setter Property="BorderThickness" Value="{DynamicResource BorderThickness}" />
        <Setter Property="BorderBrush" Value="{theme:ThemeResource SystemBaseLowColor}" />
        <Setter Property="metro:ControlsHelper.MouseOverBorderBrush" Value="{theme:ThemeResource SystemBaseMediumColor}" />
        <Setter Property="metro:ControlsHelper.FocusBorderBrush" Value="{theme:ThemeResource SystemAccentColor}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{theme:ThemeResource SystemAccentColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>