<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:AudioBand.Resources"
                    xmlns:fluentWpf="clr-namespace:SourceChord.FluentWPF;assembly=FluentWPF"
                    xmlns:valueConverters="clr-namespace:AudioBand.ValueConverters"
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks">
    <ResourceDictionary.MergedDictionaries>
        <local:SharedDictionary Source="Shared.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <Style x:Key="NavigationPaneListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <ContentPresenter/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NavigationPaneTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="{StaticResource NavigationPaneItemFontSize}"/>
        <Setter Property="FontWeight" Value="Light"/>
    </Style>
    <Style x:Key="NavigationPaneRadioButton" TargetType="{x:Type RadioButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FontSize" Value="{StaticResource NavigationPaneItemFontSize}"/>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="Height" Value="{StaticResource NavigationPaneItemHeight}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid Background="{TemplateBinding Background}"
                          RenderTransformOrigin="0.5, 0.5">
                        <Grid.RenderTransform>
                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                        </Grid.RenderTransform>
                        <Rectangle x:Name="RevealHoverLightLayer"
                                   Opacity="0"
                                   HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                   Fill="{StaticResource RevealHoverLightBrush}"/>
                        <Border x:Name="Border" BorderBrush="{fluentWpf:RevealBrush Color={StaticResource ButtonRevealColor}, Size=50}"
                                BorderThickness="0,1,1,1" SnapsToDevicePixels="True" Background="Transparent">
                            <DockPanel LastChildFill="True">
                                <Rectangle DockPanel.Dock="Left" Fill="{x:Static fluentWpf:AccentColors.ImmersiveSystemAccentBrush}" Width="5" Height="25"
                                           Visibility="{TemplateBinding IsChecked, Converter={x:Static valueConverters:Converters.BoolToVisibility}, ConverterParameter=False}" VerticalAlignment="Center"/>
                                <ContentPresenter Margin="15, 0, 0, 0" VerticalAlignment="Center"/>
                            </DockPanel>
                        </Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
                                                        To="{StaticResource NavigationPaneHoverBackgroundColor}" Duration="0"/>
                                        <DoubleAnimation Storyboard.TargetName="RevealHoverLightLayer" Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
                                                        To="{StaticResource NavigationPaneClickBackgroundColor}" Duration="0"/>
                                        <DoubleAnimation Storyboard.TargetName="RevealHoverLightLayer" Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0"/>
                                        <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                                         To="0.98" Duration="0:0:0.01"/>
                                        <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                                         To="0.98" Duration="0:0:0.01"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Background="{TemplateBinding Background}">
                        <Rectangle x:Name="RevealHoverLightLayer"
                                   Opacity="0"
                                   HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                   Fill="{StaticResource RevealHoverLightBrush}"/>
                        <DockPanel>
                            <TextBlock x:Name="ExpanderIcon" DockPanel.Dock="Left"
                                       Margin="20, 0, 0, 0"
                                       HorizontalAlignment="Center" VerticalAlignment="Center"
                                       RenderTransformOrigin="0.5,0.5" TextAlignment="Left"
                                       FontFamily="Segoe MDL2 Assets" FontSize="18" Text="&#xE76C;">
                                <FrameworkElement.RenderTransform>
                                    <RotateTransform Angle="0"/>
                                </FrameworkElement.RenderTransform>
                            </TextBlock>
                            <ContentPresenter Margin="10, 0, 0, 0" VerticalAlignment="Center"/>
                        </DockPanel>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
                                                        To="{StaticResource NavigationPaneHoverBackgroundColor}" Duration="0"/>
                                        <DoubleAnimation Storyboard.TargetName="RevealHoverLightLayer" Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ExpanderIcon" Storyboard.TargetProperty="(RenderTransform).(RotateTransform.Angle)"
                                                         To="0" Duration="0:0:0.2">
                                            <DoubleAnimation.EasingFunction>
                                                <QuadraticEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ExpanderIcon" Storyboard.TargetProperty="(RenderTransform).(RotateTransform.Angle)"
                                                         To="90" Duration="0:0:0.2">
                                            <DoubleAnimation.EasingFunction>
                                                <QuadraticEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NavigationPaneExpander" TargetType="{x:Type Expander}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="IsExpanded" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="0" x:Name="ContentRow"/>
                        </Grid.RowDefinitions>
                        <ToggleButton Grid.Row="0" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      Height="{StaticResource NavigationPaneItemHeight}"
                                      Content="{TemplateBinding Header}" Style="{StaticResource ExpanderToggleButton}"/>
                        <ContentPresenter Grid.Row="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ContentRow" Property="Height" Value="{Binding DesiredHeight, ElementName=Content}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NavigationPaneIcon" TargetType="{x:Type Image}">
        <Setter Property="Height" Value="{StaticResource NavigationPaneIconLength}"/>
        <Setter Property="Width" Value="{StaticResource NavigationPaneIconLength}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0, 0, 15, 0"/>
    </Style>
</ResourceDictionary>