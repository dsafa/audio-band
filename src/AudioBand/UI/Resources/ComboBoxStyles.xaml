<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:audioband="clr-namespace:AudioBand.UI"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">
    <ResourceDictionary.MergedDictionaries>
        <audioband:SharedDictionary Source="Shared.xaml" />
        <audioband:SharedDictionary Source="ScrollbarStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <Style BasedOn="{StaticResource {x:Type ComboBoxItem}}" TargetType="ComboBoxItem">
        <Style.Resources>
            <system:Double x:Key="ComboBoxItemHeight">30</system:Double>
        </Style.Resources>
        <Setter Property="Height" Value="{StaticResource ComboBoxItemHeight}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="ComboBoxItem"
                            Padding="4,0"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{audioband:ThemeResource SystemAccentColorLow}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{audioband:ThemeResource SystemListMediumColor}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{audioband:ThemeResource SystemAccentColorHigh}" />
                </MultiTrigger.Setters>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ComboboxToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{TemplateBinding Background}">
                        <TextBlock Margin="8,0"
                                   HorizontalAlignment="Right"
                                   VerticalAlignment="Center"
                                   FontFamily="Segoe MDL2 Assets"
                                   FontSize="16"
                                   Foreground="{audioband:ThemeResource SystemBaseMediumColor}"
                                   Text="&#xE70D;"
                                   TextAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="{StaticResource BorderThickness}" />
        <Setter Property="BorderBrush" Value="{audioband:ThemeResource SystemBaseLowColor}" />
        <Setter Property="FontSize" Value="{StaticResource BodyFontSize}" />
        <Setter Property="Background" Value="{audioband:ThemeResource SystemAltHighColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Border x:Name="Border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="{Binding ElementName=Border, Path=ActualHeight}" />
                            </Grid.ColumnDefinitions>
                            <ToggleButton x:Name="ToggleButton"
                                          Grid.Column="0"
                                          Grid.ColumnSpan="2"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="Stretch"
                                          Background="{TemplateBinding Background}"
                                          BorderThickness="0"
                                          Focusable="false"
                                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Style="{StaticResource ComboboxToggleButtonStyle}" />
                            <ContentPresenter Name="ContentSite"
                                              Grid.Column="0"
                                              Margin="{StaticResource InputSpacing}"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Center"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              IsHitTestVisible="False" />
                            <TextBox x:Name="PART_EditableTextBox"
                                     Grid.Column="0"
                                     Padding="{StaticResource InputSpacing}"
                                     HorizontalAlignment="Stretch"
                                     VerticalAlignment="Stretch"
                                     VerticalContentAlignment="Center"
                                     Background="Transparent"
                                     BorderThickness="0"
                                     ContextMenu="{StaticResource StandardInputContextMenu}"
                                     Focusable="True"
                                     Foreground="{TemplateBinding Foreground}"
                                     IsReadOnly="{TemplateBinding IsReadOnly}"
                                     Style="{x:Null}"
                                     Visibility="Hidden" />
                            <Popup x:Name="PART_Popup"
                                   Grid.Column="0"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   Placement="Center"
                                   PlacementTarget="{Binding ElementName=Border}"
                                   PopupAnimation="Fade">
                                <Border MinWidth="{TemplateBinding ActualWidth}"
                                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                        Margin="8"
                                        Background="{audioband:ThemeResource SystemChromeMediumLowColor}"
                                        BorderBrush="{audioband:ThemeResource SystemChromeHighColor}"
                                        BorderThickness="1"
                                        RenderTransformOrigin="0.5, 0.5">
                                    <Border.Effect>
                                        <DropShadowEffect x:Name="PopupEffect"
                                                          BlurRadius="15"
                                                          Opacity="0"
                                                          ShadowDepth="0" />
                                    </Border.Effect>
                                    <FrameworkElement.RenderTransform>
                                        <ScaleTransform x:Name="PopupTransform" />
                                    </FrameworkElement.RenderTransform>
                                    <ScrollViewer Margin="0,4"
                                                  CanContentScroll="True"
                                                  VerticalScrollBarVisibility="Auto">
                                        <VirtualizingStackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{audioband:ThemeResource SystemAccentColor}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{audioband:ThemeResource SystemAccentColor}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{audioband:ThemeResource SystemBaseMediumColor}" />
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PopupTransform"
                                                         Storyboard.TargetProperty="ScaleX"
                                                         From="0.8"
                                                         To="1"
                                                         Duration="0:0:0.1">
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase Amplitude="0.1" EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="PopupTransform"
                                                         Storyboard.TargetProperty="ScaleY"
                                                         From="0.5"
                                                         To="1"
                                                         Duration="0:0:0.1">
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase Amplitude="0.1" EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="PopupEffect"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="0"
                                                         To="0.4"
                                                         Duration="0:0:0.4">
                                            <DoubleAnimation.EasingFunction>
                                                <QuadraticEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="PopupEffect"
                                                         Storyboard.TargetProperty="ShadowDepth"
                                                         From="10"
                                                         To="2"
                                                         Duration="0:0:0.4">
                                            <DoubleAnimation.EasingFunction>
                                                <QuadraticEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PopupEffect"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="0"
                                                         Duration="0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="FontFamilyComboBoxItemDataTemplate">
        <TextBlock>
            <Run Text="{Binding Path=.}" />
            <Run Text="  " />
            <Run FontFamily="{Binding Path=.}" Text="{Binding Path=.}" />
        </TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="EnumDescriptorItemTemplate">
        <TextBlock Text="{Binding Description}" />
    </DataTemplate>
</ResourceDictionary>