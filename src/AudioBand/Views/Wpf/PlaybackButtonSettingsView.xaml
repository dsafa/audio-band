<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:AudioBand.Views.Wpf"
             xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:viewmodels="clr-namespace:AudioBand.ViewModels"
             xmlns:behaviours="clr-namespace:AudioBand.Views.Wpf.Behaviours"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:models="clr-namespace:AudioBand.Models"
             mc:Ignorable="d">
    <DataTemplate x:Key="PlaybackButtonContent">
        <DataTemplate.Resources>
            <ResourceDictionary>
                <ResourceDictionary.MergedDictionaries>
                    <ResourceDictionary Source="Resources/Style.xaml"/>
                    <ResourceDictionary Source="Resources/Strings.xaml"/>
                    <ResourceDictionary Source="Resources/Converters.xaml"/>
                </ResourceDictionary.MergedDictionaries>
            </ResourceDictionary>
        </DataTemplate.Resources>
        <StackPanel Style="{StaticResource SettingsStackPanel}" d:DataContext="{d:DesignInstance viewmodels:NextButtonVM}">
            <TextBlock Text="{StaticResource ArrangementSectionText}" Style="{StaticResource TitleTextBlock}"/>
            <TextBlock Text="{StaticResource VisibilityLabelText}" Style="{StaticResource DescriptionTextBlock}"/>
            <metro:ToggleSwitch OnLabel="{StaticResource StatusVisible}" OffLabel="{StaticResource StatusHidden}"
                            IsChecked="{Binding IsVisible, Mode=TwoWay}"/>
            <UniformGrid Rows="4" Columns="2" Style="{StaticResource ArrangementGridStyle}">
                <TextBlock Text="{StaticResource WidthLabelText}" Style="{StaticResource DescriptionTextBlock}"/>
                <TextBlock Text="{StaticResource HeightLabelText}" Style="{StaticResource DescriptionTextBlock}"/>
                <metro:NumericUpDown behaviours:NumericInput.Type="Size" Value="{Binding Width, Mode=TwoWay}"/>
                <metro:NumericUpDown behaviours:NumericInput.Type="Size" Value="{Binding Height, Mode=TwoWay}"/>
                <TextBlock Text="{StaticResource XPositionLabelText}" Style="{StaticResource DescriptionTextBlock}"/>
                <TextBlock Text="{StaticResource YPositionLabelText}" Style="{StaticResource DescriptionTextBlock}"/>
                <metro:NumericUpDown behaviours:NumericInput.Type="Position" Value="{Binding XPosition, Mode=TwoWay}"/>
                <metro:NumericUpDown behaviours:NumericInput.Type="Position" Value="{Binding YPosition, Mode=TwoWay}"/>
            </UniformGrid>

            <TextBlock Margin="{StaticResource SectionMargin}" Text="{StaticResource BackgroundColorSectionText}" Style="{StaticResource TitleTextBlock}"/>
            <TextBlock Text="{StaticResource DefaultColorLabelText}" Style="{StaticResource DescriptionTextBlock}"/>
            <local:ColorPicker Color="{Binding BackgroundColor, Converter={StaticResource ColorConverter}}" DialogService="{Binding DialogService}"/>
            <TextBlock Text="{StaticResource HoverColorLabelText}" Style="{StaticResource DescriptionTextBlock}"/>
            <local:ColorPicker Color="{Binding HoveredBackgroundColor, Converter={StaticResource ColorConverter}}" DialogService="{Binding DialogService}"/>
            <TextBlock Text="{StaticResource ClickedColorLabelText}" Style="{StaticResource DescriptionTextBlock}"/>
            <local:ColorPicker Color="{Binding ClickedBackgroundColor, Converter={StaticResource ColorConverter}}" DialogService="{Binding DialogService}"/>


            <TextBlock Margin="{StaticResource SectionMargin}" Text="{StaticResource PlaybackButtonContentSectionText}" Style="{StaticResource TitleTextBlock}"/>
            <TextBlock Text="{StaticResource PlaybackButtonContentTypeDescription}" Style="{StaticResource DescriptionTextBlock}"/>
            <ComboBox ItemsSource="{Binding ButtonContentTypes}" SelectedItem="{Binding ContentType}"/>

            <ItemsControl>
                <ItemsControl.Style>
                    <Style TargetType="{x:Type ItemsControl}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ContentType}" Value="{x:Static models:ButtonContentType.Image}">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ItemsControl.Style>
                <TextBlock Text="{StaticResource ButtonImageLabelText}" Style="{StaticResource DescriptionTextBlock}"/>
                <local:ImagePicker ImagePath="{Binding ImagePath, Mode=TwoWay}" DialogService="{Binding DialogService}"/>
                <TextBlock Text="{StaticResource ButtonHoveredImageLabelText}" Style="{StaticResource DescriptionTextBlock}"/>
                <local:ImagePicker ImagePath="{Binding HoveredImagePath, Mode=TwoWay}" DialogService="{Binding DialogService}"/>
                <TextBlock Text="{StaticResource ButtonClickedImageLabelText}" Style="{StaticResource DescriptionTextBlock}"/>
                <local:ImagePicker ImagePath="{Binding ClickedImagePath, Mode=TwoWay}" DialogService="{Binding DialogService}"/>
            </ItemsControl>

            <ItemsControl>
                <ItemsControl.Style>
                    <Style TargetType="{x:Type ItemsControl}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ContentType}" Value="{x:Static models:ButtonContentType.Text}">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ItemsControl.Style>
                <TextBlock Text="{StaticResource PlaybackButtonFontFamilyDescription}" Style="{StaticResource DescriptionTextBlock}"/>
                <ComboBox ItemsSource="{Binding Source={x:Static Fonts.SystemFontFamilies}}" IsEditable="True"
                          SelectedValue="{Binding TextFontFamily}" SelectedValuePath="Source"
                          ItemTemplate="{StaticResource FontFamilyComboBoxItemDataTemplate}" Width="400"/>
                <TextBlock Text="{StaticResource PlaybackButtonTextDescription}" Style="{StaticResource DescriptionTextBlock}"/>
                <TextBox Text="{Binding Text}" FontFamily="{Binding TextFontFamily}" Width="100"/>
                <TextBlock Text="{StaticResource ButtonTextColorDescription}" Style="{StaticResource DescriptionTextBlock}"/>
                <local:ColorPicker Color="{Binding TextColor, Converter={StaticResource ColorConverter}}" DialogService="{Binding DialogService}"/>
                <TextBlock Text="{StaticResource ButtonTextHoverColorDescription}" Style="{StaticResource DescriptionTextBlock}"/>
                <local:ColorPicker Color="{Binding TextHoveredColor, Converter={StaticResource ColorConverter}}" DialogService="{Binding DialogService}"/>
                <TextBlock Text="{StaticResource ButtonTextClickedColorDescription}" Style="{StaticResource DescriptionTextBlock}"/>
                <local:ColorPicker Color="{Binding TextClickedColor, Converter={StaticResource ColorConverter}}" DialogService="{Binding DialogService}"/>
            </ItemsControl>

            <TextBlock Margin="{StaticResource SectionMargin}" Text="{StaticResource OtherSectionText}" Style="{StaticResource TitleTextBlock}"/>
            <Button HorizontalAlignment="Left" 
                Content="{StaticResource ResetButtonText}"
                Command="{Binding ResetCommand}"/>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewmodels:NextButtonVM}">
        <ContentControl ContentTemplate="{StaticResource PlaybackButtonContent}" Content="{Binding}"/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewmodels:PreviousButtonVM}">
        <ContentControl ContentTemplate="{StaticResource PlaybackButtonContent}" Content="{Binding}"/>
    </DataTemplate>
</ResourceDictionary>
