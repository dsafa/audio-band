<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:behaviours="clr-namespace:AudioBand.Views.Wpf.Behaviours">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.ToggleSwitch.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.Buttons.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MetroFlatButton}">
        <Setter Property="metro:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
        <Setter Property="FontSize" Value="{StaticResource NormalFontSize}"/>
    </Style>
    <Style x:Key="AccentButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MetroFlatButton}">
        <Setter Property="metro:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
        <Setter Property="FontSize" Value="{StaticResource NormalFontSize}"/>
    </Style>
    <Style x:Key="TreeViewNavigation" TargetType="{x:Type TreeView}" BasedOn="{StaticResource {x:Type TreeView}}">
        <Setter Property="FontSize" Value="24"/>
    </Style>
    <Style x:Key="TreeviewButtonPositive" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Margin" Value="0, 4, 0, 0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource GrayBrush2}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource AccentBaseColorBrush}"/>
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource AccentSelectedColorBrush}"/>
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TreeviewButtonNegative" TargetType="{x:Type Button}" BasedOn="{StaticResource TreeviewButtonPositive}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="Red"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type Slider}" BasedOn="{StaticResource {x:Type Slider}}">
        <Setter Property="IsMoveToPointEnabled" Value="True"/>
    </Style>
    <Style TargetType="{x:Type ListView}" BasedOn="{StaticResource {x:Type ListView}}">
        <Setter Property="BorderThickness" Value="0"/>
    </Style>
    <Style TargetType="{x:Type Grid}">
        <Style.Resources>
            <Thickness x:Key="GridMargin" Left="0" Top="2" Right="0" Bottom="0" />
            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                <Setter Property="Margin" Value="{StaticResource GridMargin}"/>
                <Setter Property="FontSize" Value="{StaticResource NormalFontSize}"/>
            </Style>
            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                <Setter Property="Margin" Value="{StaticResource GridMargin}"/>
                <Setter Property="FontSize" Value="{StaticResource NormalFontSize}"/>
            </Style>
            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                <Setter Property="Margin" Value="{StaticResource GridMargin}"/>
            </Style>
            <Style TargetType="{x:Type metro:ToggleSwitch}" BasedOn="{StaticResource MahApps.Metro.Styles.ToggleSwitch.Win10}">
                <Setter Property="Margin" Value="0, 4, 0, 2"/>
                <Setter Property="FontSize" Value="{StaticResource NormalFontSize}"/>
            </Style>
            <Style TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
                <Setter Property="Margin" Value="2, 2, 8, 0"/>
                <Setter Property="FontSize" Value="{StaticResource NormalFontSize}"/>
            </Style>
            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                <Setter Property="Margin" Value="{StaticResource GridMargin}"/>
                <Setter Property="FontSize" Value="{StaticResource NormalFontSize}"/>
            </Style>
            <Style TargetType="{x:Type DockPanel}">
                <Setter Property="Margin" Value="{StaticResource GridMargin}"/>
            </Style>
            <Style TargetType="{x:Type Rectangle}">
                <Setter Property="Margin" Value="{StaticResource GridMargin}"/>
            </Style>
            <Style TargetType="{x:Type metro:NumericUpDown}" BasedOn="{StaticResource {x:Type metro:NumericUpDown}}">
                <Setter Property="Margin" Value="{StaticResource GridMargin}"/>
                <Setter Property="FontSize" Value="{StaticResource NormalFontSize}"/>
                <Setter Property="TextAlignment" Value="Left"/>
                <Style.Triggers>
                    <Trigger Property="behaviours:NumericInput.Type" Value="Size">
                        <Setter Property="NumericInputMode" Value="Numbers"/>
                        <Setter Property="Minimum" Value="1"/>
                        <Setter Property="Interval" Value="1"/>
                    </Trigger>
                    <Trigger Property="behaviours:NumericInput.Type" Value="Position">
                        <Setter Property="NumericInputMode" Value="Numbers"/>
                        <Setter Property="Interval" Value="1"/>
                    </Trigger>
                    <Trigger Property="behaviours:NumericInput.Type" Value="FontSize">
                            <Setter Property="NumericInputMode" Value="Decimal"/>
                        <Setter Property="Minimum" Value="0.5"/>
                        <Setter Property="Interval" Value="0.5"/>
                    </Trigger>
                    <Trigger Property="behaviours:NumericInput.Type" Value="Positive">
                        <Setter Property="NumericInputMode" Value="Numbers"/>
                        <Setter Property="Minimum" Value="0"/>
                        <Setter Property="Interval" Value="1"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
    </Style>
</ResourceDictionary>